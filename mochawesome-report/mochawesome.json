{
  "stats": {
    "suites": 2,
    "tests": 4,
    "passes": 4,
    "pending": 0,
    "failures": 0,
    "start": "2023-10-04T20:16:31.131Z",
    "end": "2023-10-04T20:16:37.988Z",
    "duration": 6857,
    "testsRegistered": 4,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "a7aa72e7-67ed-45fb-a8af-87d42cd2ba00",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "91df68bc-ed43-4f23-94aa-9be04f8a9306",
          "title": "Login Test",
          "fullFile": "C:\\Users\\Krkljes\\Desktop\\Realworld App Praksa\\Realworld_app_praksa\\tests\\login.test.js",
          "file": "\\tests\\login.test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Login Test\"",
              "fullTitle": "Login Test \"before all\" hook in \"Login Test\"",
              "timedOut": false,
              "duration": 1218,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Initialize the WebDriver and open the browser\ndriver = await new Builder().forBrowser('chrome').build();",
              "err": {},
              "uuid": "34f7453b-2e91-400b-947f-017455a1330c",
              "parentUUID": "91df68bc-ed43-4f23-94aa-9be04f8a9306",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Login Test\"",
              "fullTitle": "Login Test \"after all\" hook in \"Login Test\"",
              "timedOut": false,
              "duration": 34,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Quit the WebDriver after the test is complete\nawait driver.quit();",
              "err": {},
              "uuid": "51369d95-fa95-48d3-8b37-95f9476aab50",
              "parentUUID": "91df68bc-ed43-4f23-94aa-9be04f8a9306",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "should log in successfully",
              "fullTitle": "Login Test should log in successfully",
              "timedOut": false,
              "duration": 1052,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const loginPage = new LoginPage(driver);\n// Perform login\nawait loginPage.performLogin();\n// Add assertions to verify successful login\nconst currentUrl = await driver.getCurrentUrl();\nassert.isTrue(currentUrl === loginPage.baseUrl, 'Login was not successful.');",
              "err": {},
              "uuid": "ab936b10-17b3-41ed-b415-2a8f17ae7f61",
              "parentUUID": "91df68bc-ed43-4f23-94aa-9be04f8a9306",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should display an error message for login",
              "fullTitle": "Login Test should display an error message for login",
              "timedOut": false,
              "duration": 1259,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const loginPage = new LoginPage(driver);\n// Perform login\nawait loginPage.tryInvalidLogin();\n// Add assertions to verify successful login\nconst errorMessage = await driver.findElement(loginPage.errorField);\nconst errorText = await errorMessage.getText();\nassert.isTrue(errorText.includes(loginPage.errorMsg), \n'Error message not displayed for invalid login');",
              "err": {},
              "uuid": "81cd8c54-1fd2-4345-ab97-ce71879ee6fb",
              "parentUUID": "91df68bc-ed43-4f23-94aa-9be04f8a9306",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ab936b10-17b3-41ed-b415-2a8f17ae7f61",
            "81cd8c54-1fd2-4345-ab97-ce71879ee6fb"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2311,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "f59701aa-56a9-4f2d-9104-7629db3937cd",
          "title": "SignUp Test",
          "fullFile": "C:\\Users\\Krkljes\\Desktop\\Realworld App Praksa\\Realworld_app_praksa\\tests\\signup.test.js",
          "file": "\\tests\\signup.test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"SignUp Test\"",
              "fullTitle": "SignUp Test \"before all\" hook in \"SignUp Test\"",
              "timedOut": false,
              "duration": 1230,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Initialize the WebDriver and open the browser\ndriver = await new Builder().forBrowser('chrome').build();",
              "err": {},
              "uuid": "be99d6eb-b188-44fe-a028-bc606152bccd",
              "parentUUID": "f59701aa-56a9-4f2d-9104-7629db3937cd",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"SignUp Test\"",
              "fullTitle": "SignUp Test \"after all\" hook in \"SignUp Test\"",
              "timedOut": false,
              "duration": 33,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Quit the WebDriver after the test is complete\nawait driver.quit();",
              "err": {},
              "uuid": "3eb7bc66-37b0-45ce-b07a-4e83502365be",
              "parentUUID": "f59701aa-56a9-4f2d-9104-7629db3937cd",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "should sign up successfully",
              "fullTitle": "SignUp Test should sign up successfully",
              "timedOut": false,
              "duration": 1331,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const signUpPage = new SignUpPage(driver);\n// Perform signup\nawait signUpPage.performSignUp();\n// Add assertions to verify successful signup\nconst currentUrl = await driver.getCurrentUrl();\nassert.isTrue(currentUrl === signUpPage.loginUrl, 'Sign up was not successful');",
              "err": {},
              "uuid": "33178996-a18c-47ca-ac14-a20b1e0f9064",
              "parentUUID": "f59701aa-56a9-4f2d-9104-7629db3937cd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "signup button should be disabled",
              "fullTitle": "SignUp Test signup button should be disabled",
              "timedOut": false,
              "duration": 694,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const signUpPage = new SignUpPage(driver);\n// Perform signup\nawait signUpPage.tryInvalidSignUp();\n// Add assertions to verify successful signup\nconst signUpButton = await driver.findElement(signUpPage.singUpBtn);\nassert.isTrue(await signUpButton.getAttribute('disabled') === 'true',\n'Signup button is not disabled for invalid signup');",
              "err": {},
              "uuid": "b6ade9ff-353f-4825-9400-8e98bc5dded5",
              "parentUUID": "f59701aa-56a9-4f2d-9104-7629db3937cd",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "33178996-a18c-47ca-ac14-a20b1e0f9064",
            "b6ade9ff-353f-4825-9400-8e98bc5dded5"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2025,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 30000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}