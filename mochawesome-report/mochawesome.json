{
  "stats": {
    "suites": 6,
    "tests": 10,
    "passes": 10,
    "pending": 0,
    "failures": 0,
    "start": "2023-10-13T22:34:26.541Z",
    "end": "2023-10-13T22:34:52.899Z",
    "duration": 26358,
    "testsRegistered": 10,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "bf1bd220-4d20-4626-a2a7-4029489da11d",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "81e3a91b-9ee8-4208-adf1-308075335f6f",
          "title": "Account tests",
          "fullFile": "C:\\Users\\Krkljes\\Desktop\\Realworld App Praksa\\Realworld_app_praksa\\tests\\account.test.js",
          "file": "\\tests\\account.test.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"Account tests\"",
              "fullTitle": "Account tests \"before each\" hook in \"Account tests\"",
              "timedOut": false,
              "duration": 1272,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Initialize the WebDriver and open the browser\ndriver = await new Builder().forBrowser('chrome').build();",
              "err": {},
              "uuid": "29b4a2eb-981e-4f0a-8d96-d1a2766a2f0b",
              "parentUUID": "81e3a91b-9ee8-4208-adf1-308075335f6f",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"Account tests\"",
              "fullTitle": "Account tests \"after each\" hook in \"Account tests\"",
              "timedOut": false,
              "duration": 32,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Quit the WebDriver after the test is complete\nawait driver.quit();",
              "err": {},
              "uuid": "57cd1c3d-90e3-4f82-8f26-f22f3a60ae78",
              "parentUUID": "81e3a91b-9ee8-4208-adf1-308075335f6f",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Successful Bank Account Creation Process Test",
              "fullTitle": "Account tests Successful Bank Account Creation Process Test",
              "timedOut": false,
              "duration": 1722,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "[\n  \"Test Case Title: Successful Bank Account Creation Process Test\",\n  \"Test Case Description: Verify that a user can successfully create a bank account on the website\",\n  \"Step 1: Open the web browser\",\n  \"Step 2: Navigate to the login page (http://localhost:3000/signin)\",\n  \"Step 3: Enter a valid username (Tavares_Barrows) in the username input field\",\n  \"Step 4: Enter a valid password (s3cret) in the password input field\",\n  \"Step 5: Click the \\\"SIGN IN\\\" button\",\n  \"Step 6: Wait for the URL to match (http://localhost:3000/)\",\n  \"Step 7: Click on the \\\"Bank Accounts\\\" button to access the account management page\",\n  \"Step 8: Click on the \\\"CREATE\\\" button\",\n  \"Step 9: Generate a dynamic bank name for the new account\",\n  \"Step 10: Provide the routing number (123456789) for the bank account\",\n  \"Step 11: Enter the account number (123456789) for the new account\",\n  \"Step 12: Click on the \\\"SAVE\\\" button to complete the bank account creation\",\n  \"Step 13: Wait for the URL to match (http://localhost:3000/bankaccounts)\"\n]",
              "code": "const loginPage = new LoginPage(driver);\nconst accountPage = new AccountPage(driver);\n// Perform login\nawait loginPage.performLogin();\n// Create account\nawait accountPage.createBankAccount();\n// Add assertions to verify successful account creation\nconst currentUrl = await driver.getCurrentUrl();\nexpect(currentUrl).to.equal(accountPage.accountsUrl, \"Bank Account Creation Process Test failed\");\n// Additional context\naddContext(this, 'Test Case Title: Successful Bank Account Creation Process Test');\naddContext(this, 'Test Case Description: Verify that a user can successfully create a bank account on the website');\n// Test Steps:\naddContext(this, 'Step 1: Open the web browser');\naddContext(this, 'Step 2: Navigate to the login page (' + loginPage.loginUrl + ')');\naddContext(this, 'Step 3: Enter a valid username (' + loginPage.username + ') in the username input field');\naddContext(this, 'Step 4: Enter a valid password (' + loginPage.password + ') in the password input field');\naddContext(this, 'Step 5: Click the \"SIGN IN\" button');\naddContext(this, 'Step 6: Wait for the URL to match (' + loginPage.baseUrl + ')');\naddContext(this, 'Step 7: Click on the \"Bank Accounts\" button to access the account management page');\naddContext(this, 'Step 8: Click on the \"CREATE\" button');\naddContext(this, 'Step 9: Generate a dynamic bank name for the new account');\naddContext(this, 'Step 10: Provide the routing number (' + accountPage.account.routingNumber + ') for the bank account');\naddContext(this, 'Step 11: Enter the account number (' + accountPage.account.accountNumber + ') for the new account');\naddContext(this, 'Step 12: Click on the \"SAVE\" button to complete the bank account creation');\naddContext(this, 'Step 13: Wait for the URL to match (' + accountPage.accountsUrl + ')');",
              "err": {},
              "uuid": "13f1b937-58e0-4912-89b8-6201ac624d9d",
              "parentUUID": "81e3a91b-9ee8-4208-adf1-308075335f6f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Successful Bank Account Deletion Process Test",
              "fullTitle": "Account tests Successful Bank Account Deletion Process Test",
              "timedOut": false,
              "duration": 1364,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "[\n  \"Test Case Title: Successful Bank Account Creation Process Test\",\n  \"Test Case Description: Verify that a user can successfully create a bank account on the website\",\n  \"Step 1: Open the web browser\",\n  \"Step 2: Navigate to the login page (http://localhost:3000/signin)\",\n  \"Step 3: Enter a valid username (Tavares_Barrows) in the username input field\",\n  \"Step 4: Enter a valid password (s3cret) in the password input field\",\n  \"Step 5: Click the \\\"SIGN IN\\\" button\",\n  \"Step 6: Wait for the URL to match (http://localhost:3000/)\",\n  \"Step 7: Click on the \\\"Bank Accounts\\\" button to access the account management page\",\n  \"Step 8: Locate the account that matches the account name (Kshlerin - Ledner Bank)\",\n  \"Step 9: Click the \\\"DELETE\\\" button matching the account name\",\n  \"Step 10: Selected bank account now has (Deleted) attached\"\n]",
              "code": "const loginPage = new LoginPage(driver);\nconst accountPage = new AccountPage(driver);\n// Perform login\nawait loginPage.performLogin();\n// Delete account\nawait accountPage.findAndDeleteBankAccountByName();\n// Add assertions to verify successful deletion\nexpect(accountPage.verifyText).to.satisfy((text) => {\n  return text.includes(\"(Deleted)\") || text.includes(\"DELETE\");\n}, 'Associated text does not meet the expected conditions.');\n// Additional context\naddContext(this, 'Test Case Title: Successful Bank Account Creation Process Test');\naddContext(this, 'Test Case Description: Verify that a user can successfully create a bank account on the website');\n// Test Steps:\naddContext(this, 'Step 1: Open the web browser');\naddContext(this, 'Step 2: Navigate to the login page (' + loginPage.loginUrl + ')');\naddContext(this, 'Step 3: Enter a valid username (' + loginPage.username + ') in the username input field');\naddContext(this, 'Step 4: Enter a valid password (' + loginPage.password + ') in the password input field');\naddContext(this, 'Step 5: Click the \"SIGN IN\" button');\naddContext(this, 'Step 6: Wait for the URL to match (' + loginPage.baseUrl + ')');\naddContext(this, 'Step 7: Click on the \"Bank Accounts\" button to access the account management page');\naddContext(this, 'Step 8: Locate the account that matches the account name (' + accountPage.accountName + ')');\naddContext(this, 'Step 9: Click the \"DELETE\" button matching the account name');\naddContext(this, 'Step 10: Selected bank account now has (Deleted) attached');",
              "err": {},
              "uuid": "da6742cd-afe9-4806-9435-c88587d0ab9f",
              "parentUUID": "81e3a91b-9ee8-4208-adf1-308075335f6f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "13f1b937-58e0-4912-89b8-6201ac624d9d",
            "da6742cd-afe9-4806-9435-c88587d0ab9f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3086,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "98aebb85-92e9-4bd6-a28a-f8b0625d5699",
          "title": "Login Tests",
          "fullFile": "C:\\Users\\Krkljes\\Desktop\\Realworld App Praksa\\Realworld_app_praksa\\tests\\login.test.js",
          "file": "\\tests\\login.test.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"Login Tests\"",
              "fullTitle": "Login Tests \"before each\" hook in \"Login Tests\"",
              "timedOut": false,
              "duration": 1195,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Initialize the WebDriver and open the browser\ndriver = await new Builder().forBrowser('chrome').build();",
              "err": {},
              "uuid": "fc0b879d-e346-4f14-8dc2-bfbbcc61390b",
              "parentUUID": "98aebb85-92e9-4bd6-a28a-f8b0625d5699",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"Login Tests\"",
              "fullTitle": "Login Tests \"after each\" hook in \"Login Tests\"",
              "timedOut": false,
              "duration": 31,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Quit the WebDriver after the test is complete\nawait driver.quit();",
              "err": {},
              "uuid": "e084a741-df5a-460c-8ac1-f4b1bba425d4",
              "parentUUID": "98aebb85-92e9-4bd6-a28a-f8b0625d5699",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Successful Login Process Test",
              "fullTitle": "Login Tests Successful Login Process Test",
              "timedOut": false,
              "duration": 1143,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "[\n  \"Test Case Title: Successful Login Process Test\",\n  \"Test Case Description: Verify that a user can successfully log in into an account on the website\",\n  \"Step 1: Open the web browser\",\n  \"Step 2: Navigate to the login page (http://localhost:3000/signin)\",\n  \"Step 3: Enter a valid username (Tavares_Barrows) in the username input field\",\n  \"Step 4: Enter a valid password (s3cret) in the password input field\",\n  \"Step 5: Click on the \\\"SIGN IN\\\" button\",\n  \"Step 6: Wait for the URL to match (http://localhost:3000/)\"\n]",
              "code": "const loginPage = new LoginPage(driver);\n// Perform login\nawait loginPage.performLogin();\n// Add assertions to verify successful Login\nconst currentUrl = await driver.getCurrentUrl();\nexpect(currentUrl).to.equal(loginPage.baseUrl, \"Login was not successful\");\n// Additional context\naddContext(this, 'Test Case Title: Successful Login Process Test');\naddContext(this, 'Test Case Description: Verify that a user can successfully log in into an account on the website');\n// Test Steps:\naddContext(this, 'Step 1: Open the web browser');\naddContext(this, 'Step 2: Navigate to the login page (' + loginPage.loginUrl + ')');\naddContext(this, 'Step 3: Enter a valid username (' + loginPage.username + ') in the username input field');\naddContext(this, 'Step 4: Enter a valid password (' + loginPage.password + ') in the password input field');\naddContext(this, 'Step 5: Click on the \"SIGN IN\" button');\naddContext(this, 'Step 6: Wait for the URL to match (' + loginPage.baseUrl + ')');",
              "err": {},
              "uuid": "17220517-1a10-42cc-824f-eea37d6a5ca0",
              "parentUUID": "98aebb85-92e9-4bd6-a28a-f8b0625d5699",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Unsuccessful Login Process Test",
              "fullTitle": "Login Tests Unsuccessful Login Process Test",
              "timedOut": false,
              "duration": 1209,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "[\n  \"Test Case Title: Unsuccessful Login Process Test\",\n  \"Test Case Description: Verify that the login process fails when a user attempts to log in with invalid or incorrect information on the website.\",\n  \"Step 1: Open the web browser\",\n  \"Step 2: Navigate to the login page (http://localhost:3000/signin)\",\n  \"Step 3: Enter a valid username (Tavares_Barrows) in the username input field\",\n  \"Step 4: Enter a valid password (s3cret) in the password input field\",\n  \"Step 5: Click on the \\\"SIGN IN\\\" button\",\n  \"Step 6: Error message is displayed (Username or password is invalid)\"\n]",
              "code": "const loginPage = new LoginPage(driver);\n// Try to login with invalid credentials\nawait loginPage.tryInvalidLogin();\n// Add assertions to verify the Login failed\nconst errorText = await loginPage.getText(loginPage.errorField);\nexpect(errorText).to.equal(loginPage.errorMsg, \"Unsuccessful Login Process Test failed\");\n// Additional context\naddContext(this, 'Test Case Title: Unsuccessful Login Process Test');\naddContext(this, 'Test Case Description: Verify that the login process fails when a user attempts to log in with invalid or incorrect information on the website.');\n// Test Steps:\naddContext(this, 'Step 1: Open the web browser');\naddContext(this, 'Step 2: Navigate to the login page (' + loginPage.loginUrl + ')');\naddContext(this, 'Step 3: Enter a valid username (' + loginPage.username + ') in the username input field');\naddContext(this, 'Step 4: Enter a valid password (' + loginPage.password + ') in the password input field');\naddContext(this, 'Step 5: Click on the \"SIGN IN\" button');\naddContext(this, 'Step 6: Error message is displayed (' + errorText + ')');",
              "err": {},
              "uuid": "04043e6b-f587-4100-b55e-c5daa4a7bd79",
              "parentUUID": "98aebb85-92e9-4bd6-a28a-f8b0625d5699",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "17220517-1a10-42cc-824f-eea37d6a5ca0",
            "04043e6b-f587-4100-b55e-c5daa4a7bd79"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2352,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "4bc19d2d-e30c-49af-84e8-3492e55024d9",
          "title": "Navigation test",
          "fullFile": "C:\\Users\\Krkljes\\Desktop\\Realworld App Praksa\\Realworld_app_praksa\\tests\\navigation.test.js",
          "file": "\\tests\\navigation.test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Navigation test\"",
              "fullTitle": "Navigation test \"before all\" hook in \"Navigation test\"",
              "timedOut": false,
              "duration": 1213,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Initialize the WebDriver and open the browser\ndriver = await new Builder().forBrowser('chrome').build();",
              "err": {},
              "uuid": "f5433ec4-3975-45da-8204-72c41aa2763e",
              "parentUUID": "4bc19d2d-e30c-49af-84e8-3492e55024d9",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Navigation test\"",
              "fullTitle": "Navigation test \"after all\" hook in \"Navigation test\"",
              "timedOut": false,
              "duration": 33,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Quit the WebDriver after the test is complete\nawait driver.quit();",
              "err": {},
              "uuid": "f7a09be8-d357-47f4-94eb-98b51b6d891e",
              "parentUUID": "4bc19d2d-e30c-49af-84e8-3492e55024d9",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Step by step navigation test",
              "fullTitle": "Navigation test Step by step navigation test",
              "timedOut": false,
              "duration": 2213,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const loginPage = new LoginPage(driver);\nconst navigationPage = new NavigationPage(driver);\n// Perform login\nawait loginPage.performLogin();\n// Navigate through website\nawait navigationPage.navigate();\n// Add assertions to verify successful navigation\nconst currentUrl = await driver.getCurrentUrl();\nexpect(currentUrl).to.equal(navigationPage.url.loginUrl, \"Navigation failed\");",
              "err": {},
              "uuid": "a8f52b14-213e-4666-b180-efaf232db3a8",
              "parentUUID": "4bc19d2d-e30c-49af-84e8-3492e55024d9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a8f52b14-213e-4666-b180-efaf232db3a8"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2213,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "d1efefae-fc7d-42be-b52f-76f1564f13c0",
          "title": "Signup Process Tests",
          "fullFile": "C:\\Users\\Krkljes\\Desktop\\Realworld App Praksa\\Realworld_app_praksa\\tests\\signup.test.js",
          "file": "\\tests\\signup.test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Signup Process Tests\"",
              "fullTitle": "Signup Process Tests \"before all\" hook in \"Signup Process Tests\"",
              "timedOut": false,
              "duration": 1203,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Initialize the WebDriver and open the browser\ndriver = await new Builder().forBrowser('chrome').build();",
              "err": {},
              "uuid": "760a5a41-002a-4d9c-89bf-53b2d2166761",
              "parentUUID": "d1efefae-fc7d-42be-b52f-76f1564f13c0",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Signup Process Tests\"",
              "fullTitle": "Signup Process Tests \"after all\" hook in \"Signup Process Tests\"",
              "timedOut": false,
              "duration": 31,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Quit the WebDriver after the test is complete\nawait driver.quit();",
              "err": {},
              "uuid": "a61c4b88-bd3d-4d52-a4e3-6173e1792c05",
              "parentUUID": "d1efefae-fc7d-42be-b52f-76f1564f13c0",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Successful Signup Process Test",
              "fullTitle": "Signup Process Tests Successful Signup Process Test",
              "timedOut": false,
              "duration": 1448,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "[\n  \"Test Case Title: Successful Signup Process Test\",\n  \"Test Case Description: Verify that a user can successfully sign up for an account on the website\",\n  \"Step 1: Open the web browser\",\n  \"Step 2: Navigate to the website's homepage (http://localhost:3000/)\",\n  \"Step 3: Click on the \\\"Don't have an account? Sign Up\\\" link\",\n  \"Step 4: Verify that the signup page is displayed\",\n  \"Step 5: Enter a valid first name (Name1) in the first name input field\",\n  \"Step 6: Enter a valid last name (Lastname1) in the last name input field\",\n  \"Step 7: Enter a valid username (user1) in the username input field\",\n  \"Step 8: Enter a valid password (password1) in the password input field\",\n  \"Step 9: Enter the same password (password1) in the password confirmation input field\",\n  \"Step 10: Click on the \\\"SIGN UP\\\" button\",\n  \"Step 11: Wait for the URL to match (http://localhost:3000/signin)\"\n]",
              "code": "const signUpPage = new SignUpPage(driver);\n// Perform signup\nawait signUpPage.performSignUp();\n// Add assertions to verify successful signup\nconst currentUrl = await driver.getCurrentUrl();\nexpect(currentUrl).to.equal(signUpPage.loginUrl, \"Sign up was not successful\");\n// Additional context\naddContext(this, 'Test Case Title: Successful Signup Process Test');\naddContext(this, 'Test Case Description: Verify that a user can successfully sign up for an account on the website');\n// Test Steps:\naddContext(this, 'Step 1: Open the web browser');\naddContext(this, 'Step 2: Navigate to the website\\'s homepage (' + signUpPage.baseUrl + ')');\naddContext(this, 'Step 3: Click on the \"Don\\'t have an account? Sign Up\" link');\naddContext(this, 'Step 4: Verify that the signup page is displayed');\naddContext(this, 'Step 5: Enter a valid first name (' + signUpPage.validSignup.firstName + ') in the first name input field');\naddContext(this, 'Step 6: Enter a valid last name (' + signUpPage.validSignup.lastName + ') in the last name input field');\naddContext(this, 'Step 7: Enter a valid username (' + signUpPage.validSignup.username + ') in the username input field');\naddContext(this, 'Step 8: Enter a valid password (' + signUpPage.validSignup.password + ') in the password input field');\naddContext(this, 'Step 9: Enter the same password (' + signUpPage.validSignup.confirmPassword + ') in the password confirmation input field');\naddContext(this, 'Step 10: Click on the \"SIGN UP\" button');\naddContext(this, 'Step 11: Wait for the URL to match (' + signUpPage.loginUrl + ')');",
              "err": {},
              "uuid": "ac0bc527-9178-4e42-ad88-184f6429c4b5",
              "parentUUID": "d1efefae-fc7d-42be-b52f-76f1564f13c0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Unsuccessful Signup Process Test",
              "fullTitle": "Signup Process Tests Unsuccessful Signup Process Test",
              "timedOut": false,
              "duration": 723,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "[\n  \"Test Case Title: Unsuccessful Signup Process Test\",\n  \"Test Case Description: Verify that the signup process fails when a user attempts to sign up with invalid or incorrect information on the website.\",\n  \"Step 1: Open the web browser\",\n  \"Step 2: Navigate to the website's homepage (http://localhost:3000/)\",\n  \"Step 3: Click on the \\\"Don't have an account? Sign Up\\\" link\",\n  \"Step 4: Verify that the signup page is displayed\",\n  \"Step 5: Enter a valid first name (1) in the first name input field\",\n  \"Step 6: Enter a valid last name (1) in the last name input field\",\n  \"Step 7: Enter a valid username (1) in the username input field\",\n  \"Step 8: Enter a valid password (1111) in the password input field\",\n  \"Step 9: Enter the same password (111) in the password confirmation input field\",\n  \"Step 10: Verify that the \\\"SIGN UP\\\" button is disabled\"\n]",
              "code": "const signUpPage = new SignUpPage(driver);\n// Try to signup with invalid credentials\nawait signUpPage.tryInvalidSignUp();\n// Add assertions to verify the signup failed\nconst signUpButton = await driver.findElement(signUpPage.singUpBtn);\nexpect(await signUpButton.getAttribute('disabled')).to.equal('true', 'Signup button is not disabled for invalid signup');\n// Additional context\naddContext(this, 'Test Case Title: Unsuccessful Signup Process Test');\naddContext(this, 'Test Case Description: Verify that the signup process fails when a user attempts to sign up with invalid or incorrect information on the website.');\n// Test Steps:\naddContext(this, 'Step 1: Open the web browser');\naddContext(this, 'Step 2: Navigate to the website\\'s homepage (' + signUpPage.baseUrl + ')');\naddContext(this, 'Step 3: Click on the \"Don\\'t have an account? Sign Up\" link');\naddContext(this, 'Step 4: Verify that the signup page is displayed');\naddContext(this, 'Step 5: Enter a valid first name (' + signUpPage.invalidSignup.firstName + ') in the first name input field');\naddContext(this, 'Step 6: Enter a valid last name (' + signUpPage.invalidSignup.lastName + ') in the last name input field');\naddContext(this, 'Step 7: Enter a valid username (' + signUpPage.invalidSignup.username + ') in the username input field');\naddContext(this, 'Step 8: Enter a valid password (' + signUpPage.invalidSignup.password + ') in the password input field');\naddContext(this, 'Step 9: Enter the same password (' + signUpPage.invalidSignup.confirmPassword + ') in the password confirmation input field');\naddContext(this, 'Step 10: Verify that the \"SIGN UP\" button is disabled');",
              "err": {},
              "uuid": "77baa633-484d-41fd-bbaf-2097a4fdf0ec",
              "parentUUID": "d1efefae-fc7d-42be-b52f-76f1564f13c0",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ac0bc527-9178-4e42-ad88-184f6429c4b5",
            "77baa633-484d-41fd-bbaf-2097a4fdf0ec"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2171,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "8c3187d4-f5e1-4747-a8a3-3ab0189f4f5e",
          "title": "Transaction tests",
          "fullFile": "C:\\Users\\Krkljes\\Desktop\\Realworld App Praksa\\Realworld_app_praksa\\tests\\transaction.test.js",
          "file": "\\tests\\transaction.test.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"Transaction tests\"",
              "fullTitle": "Transaction tests \"before each\" hook in \"Transaction tests\"",
              "timedOut": false,
              "duration": 1239,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Initialize the WebDriver and open the browser\ndriver = await new Builder().forBrowser('chrome').build();",
              "err": {},
              "uuid": "f3035986-e98b-4221-82c7-e6d8dc2091a7",
              "parentUUID": "8c3187d4-f5e1-4747-a8a3-3ab0189f4f5e",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"Transaction tests\"",
              "fullTitle": "Transaction tests \"after each\" hook in \"Transaction tests\"",
              "timedOut": false,
              "duration": 34,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Quit the WebDriver after the test is complete\nawait driver.quit();",
              "err": {},
              "uuid": "d134d7fe-9c5a-471f-8364-3937d5e4e99e",
              "parentUUID": "8c3187d4-f5e1-4747-a8a3-3ab0189f4f5e",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Successful Payment Test",
              "fullTitle": "Transaction tests Successful Payment Test",
              "timedOut": false,
              "duration": 1603,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const loginPage = new LoginPage(driver);\nconst transactionPage = new TransactionPage(driver);\n// Perform login\nawait loginPage.performLogin();\nawait transactionPage.createNewPayment();\n// Add assertions to verify successful user info edit\nconst actualText = await loginPage.getText(transactionPage.successMessageField);\nexpect(actualText).includes(transactionPage.transactionData.success, \"Payment was not successful\");",
              "err": {},
              "uuid": "7b4cd61d-2dbb-4e7c-9f1b-be49f9ebcd1c",
              "parentUUID": "8c3187d4-f5e1-4747-a8a3-3ab0189f4f5e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Successful Transaction Request Test",
              "fullTitle": "Transaction tests Successful Transaction Request Test",
              "timedOut": false,
              "duration": 1598,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const loginPage = new LoginPage(driver);\nconst transactionPage = new TransactionPage(driver);\n// Perform login\nawait loginPage.performLogin();\nawait transactionPage.createNewTransactionRequest();\n// Add assertions to verify successful user info edit\nconst actualText = await loginPage.getText(transactionPage.successMessageField);\nexpect(actualText).includes(transactionPage.transactionData.success, \"Transaction request was not successful\");",
              "err": {},
              "uuid": "71462f33-c8ce-428c-981a-67dd2e335a34",
              "parentUUID": "8c3187d4-f5e1-4747-a8a3-3ab0189f4f5e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7b4cd61d-2dbb-4e7c-9f1b-be49f9ebcd1c",
            "71462f33-c8ce-428c-981a-67dd2e335a34"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3201,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "c6fea3dc-c247-451a-9081-a443ea22a5e5",
          "title": "User Info Edit Tests",
          "fullFile": "C:\\Users\\Krkljes\\Desktop\\Realworld App Praksa\\Realworld_app_praksa\\tests\\userinfo.test.js",
          "file": "\\tests\\userinfo.test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"User Info Edit Tests\"",
              "fullTitle": "User Info Edit Tests \"before all\" hook in \"User Info Edit Tests\"",
              "timedOut": false,
              "duration": 1203,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Initialize the WebDriver and open the browser\ndriver = await new Builder().forBrowser('chrome').build();",
              "err": {},
              "uuid": "2c68e9ea-17a4-4e1a-a229-32654650e0b3",
              "parentUUID": "c6fea3dc-c247-451a-9081-a443ea22a5e5",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"User Info Edit Tests\"",
              "fullTitle": "User Info Edit Tests \"after all\" hook in \"User Info Edit Tests\"",
              "timedOut": false,
              "duration": 34,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Quit the WebDriver after the test is complete\nawait driver.quit();",
              "err": {},
              "uuid": "2d3ad4a8-1306-4154-94a5-616fac507d81",
              "parentUUID": "c6fea3dc-c247-451a-9081-a443ea22a5e5",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Successful User Info Edit Test",
              "fullTitle": "User Info Edit Tests Successful User Info Edit Test",
              "timedOut": false,
              "duration": 1904,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const loginPage = new LoginPage(driver);\nconst userInfoPage = new UserInfoPage(driver);\n// Perform login\nawait loginPage.performLogin();\nawait userInfoPage.editUserInfo();\n// Add assertions to verify successful user info edit\nconst actualText = await loginPage.getText(userInfoPage.userFullName);\nexpect(actualText).includes(userInfoPage.userCredentials.firstName, \"User info edit was not successful\");",
              "err": {},
              "uuid": "c7e83055-62df-4aba-a0cd-6fb478724512",
              "parentUUID": "c6fea3dc-c247-451a-9081-a443ea22a5e5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c7e83055-62df-4aba-a0cd-6fb478724512"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1904,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 10000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}