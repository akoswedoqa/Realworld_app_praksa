{
  "stats": {
    "suites": 3,
    "tests": 6,
    "passes": 6,
    "pending": 0,
    "failures": 0,
    "start": "2023-10-12T09:50:39.495Z",
    "end": "2023-10-12T09:50:53.506Z",
    "duration": 14011,
    "testsRegistered": 6,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "cce7093c-a845-46c0-968f-625b6a9339a3",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "4e58be15-1830-4f15-b40e-d9fafb136d9a",
          "title": "Account tests",
          "fullFile": "C:\\Users\\Krkljes\\Desktop\\Realworld App Praksa\\Realworld_app_praksa\\tests\\account.test.js",
          "file": "\\tests\\account.test.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"Account tests\"",
              "fullTitle": "Account tests \"before each\" hook in \"Account tests\"",
              "timedOut": false,
              "duration": 1199,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Initialize the WebDriver and open the browser\ndriver = await new Builder().forBrowser('chrome').build();",
              "err": {},
              "uuid": "b7d6db7d-a62c-4031-b52c-341004500513",
              "parentUUID": "4e58be15-1830-4f15-b40e-d9fafb136d9a",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"Account tests\"",
              "fullTitle": "Account tests \"after each\" hook in \"Account tests\"",
              "timedOut": false,
              "duration": 32,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Quit the WebDriver after the test is complete\nawait driver.quit();",
              "err": {},
              "uuid": "0fdc41be-45c6-41a0-ab05-67b924134d6a",
              "parentUUID": "4e58be15-1830-4f15-b40e-d9fafb136d9a",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Successful Bank Account Creation Process Test",
              "fullTitle": "Account tests Successful Bank Account Creation Process Test",
              "timedOut": false,
              "duration": 1802,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "[\n  \"Test Case Title: Successful Bank Account Creation Process Test\",\n  \"Test Case Description: Verify that a user can successfully create a bank account on the website\",\n  \"Step 1: Open the web browser\",\n  \"Step 2: Navigate to the login page (http://localhost:3000/signin)\",\n  \"Step 3.1. Enter a valid username (Tavares_Barrows) in the username input field\",\n  \"Step 3.2. Enter a valid password (s3cret) in the password input field\",\n  \"Step 3.3. Click the \\\"SIGN IN\\\" button\",\n  \"Step 3.4. Wait for the URL to match (http://localhost:3000/)\",\n  \"Step 4: Click on the \\\"Bank Accounts\\\" button to access the account management page\",\n  \"Step 5.1: Click on the \\\"CREATE\\\" button\",\n  \"Step 5.2: Generate a dynamic bank name for the new account\",\n  \"Step 5.3: Provide the routing number (123456789) for the bank account\",\n  \"Step 5.4: Enter the account number (123456789) for the new account\",\n  \"Step 5.5: Click on the \\\"SAVE\\\" button to complete the bank account creation\",\n  \"Step 6: Wait for the URL to match (http://localhost:3000/bankaccounts)\"\n]",
              "code": "const loginPage = new LoginPage(driver);\nconst accountPage = new AccountPage(driver);\n// Perform login\nawait loginPage.performLogin();\n// Create account\nawait accountPage.createBankAccount();\n// Add assertions to verify successful account creation\nconst currentUrl = await driver.getCurrentUrl();\nexpect(currentUrl).to.equal(accountPage.accountsUrl, \"Bank Account Creation Process Test failed\");\n// Additional context\naddContext(this, 'Test Case Title: Successful Bank Account Creation Process Test');\naddContext(this, 'Test Case Description: Verify that a user can successfully create a bank account on the website');\n// Test Steps:\naddContext(this, 'Step 1: Open the web browser');\naddContext(this, 'Step 2: Navigate to the login page (' + loginPage.loginUrl + ')');\n// Step 3: User Information Input\naddContext(this, 'Step 3.1. Enter a valid username (' + loginPage.username + ') in the username input field');\naddContext(this, 'Step 3.2. Enter a valid password (' + loginPage.password + ') in the password input field');\naddContext(this, 'Step 3.3. Click the \"SIGN IN\" button');\naddContext(this, 'Step 3.4. Wait for the URL to match (' + loginPage.baseUrl + ')');\n// Step 4: Navigate to the bank account page\naddContext(this, 'Step 4: Click on the \"Bank Accounts\" button to access the account management page');\n// Step 5: Bank Account Creation\naddContext(this, 'Step 5.1: Click on the \"CREATE\" button');\naddContext(this, 'Step 5.2: Generate a dynamic bank name for the new account');\naddContext(this, 'Step 5.3: Provide the routing number (' + accountPage.account.routingNumber + ') for the bank account');\naddContext(this, 'Step 5.4: Enter the account number (' + accountPage.account.accountNumber + ') for the new account');\naddContext(this, 'Step 5.5: Click on the \"SAVE\" button to complete the bank account creation');\n// Step 6: Verify the Bank Account Creation\naddContext(this, 'Step 6: Wait for the URL to match (' + accountPage.accountsUrl + ')');",
              "err": {},
              "uuid": "e11109a7-c908-4a1d-a056-bff8bcef4f39",
              "parentUUID": "4e58be15-1830-4f15-b40e-d9fafb136d9a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Successful Bank Account Deletion Process Test",
              "fullTitle": "Account tests Successful Bank Account Deletion Process Test",
              "timedOut": false,
              "duration": 1388,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "[\n  \"Test Case Title: Successful Bank Account Creation Process Test\",\n  \"Test Case Description: Verify that a user can successfully create a bank account on the website\",\n  \"Step 1: Open the web browser\",\n  \"Step 2: Navigate to the login page (http://localhost:3000/signin)\",\n  \"Step 3.1. Enter a valid username (Tavares_Barrows) in the username input field\",\n  \"Step 3.2. Enter a valid password (s3cret) in the password input field\",\n  \"Step 3.3. Click the \\\"SIGN IN\\\" button\",\n  \"Step 3.4. Wait for the URL to match (http://localhost:3000/)\",\n  \"Step 4: Click on the \\\"Bank Accounts\\\" button to access the account management page\",\n  \"Step 5.1: Locate the account that matches the account name (Kshlerin - Ledner Bank)\",\n  \"Step 5.2: Click the \\\"DELETE\\\" button matching the account name\",\n  \"Step 6: Selected bank account now has (Deleted) attached\"\n]",
              "code": "const loginPage = new LoginPage(driver);\nconst accountPage = new AccountPage(driver);\n// Perform login\nawait loginPage.performLogin();\n// Delete account\nawait accountPage.findAndClickDeleteButtonByText();\n// Add assertions to verify successful deletion\nexpect(accountPage.verifyText).to.satisfy((text) => {\n  return text.includes(\"(Deleted)\") || text.includes(\"DELETE\");\n}, 'Associated text does not meet the expected conditions.');\n// Additional context\naddContext(this, 'Test Case Title: Successful Bank Account Creation Process Test');\naddContext(this, 'Test Case Description: Verify that a user can successfully create a bank account on the website');\n// Test Steps:\naddContext(this, 'Step 1: Open the web browser');\naddContext(this, 'Step 2: Navigate to the login page (' + loginPage.loginUrl + ')');\n// Step 3: User Information Input\naddContext(this, 'Step 3.1. Enter a valid username (' + loginPage.username + ') in the username input field');\naddContext(this, 'Step 3.2. Enter a valid password (' + loginPage.password + ') in the password input field');\naddContext(this, 'Step 3.3. Click the \"SIGN IN\" button');\naddContext(this, 'Step 3.4. Wait for the URL to match (' + loginPage.baseUrl + ')');\n// Step 4: Navigate to the bank account page\naddContext(this, 'Step 4: Click on the \"Bank Accounts\" button to access the account management page');\n// Step 5: Bank Account Deletion\naddContext(this, 'Step 5.1: Locate the account that matches the account name (' + accountPage.accountName + ')');\naddContext(this, 'Step 5.2: Click the \"DELETE\" button matching the account name');\n// Step 6: Verify the Bank Account Deletion\naddContext(this, 'Step 6: Selected bank account now has (Deleted) attached');",
              "err": {},
              "uuid": "91cfdb79-b7e0-454d-b5c8-71339f7d4edc",
              "parentUUID": "4e58be15-1830-4f15-b40e-d9fafb136d9a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e11109a7-c908-4a1d-a056-bff8bcef4f39",
            "91cfdb79-b7e0-454d-b5c8-71339f7d4edc"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3190,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "4e903043-d37f-423f-a017-04585b41d78e",
          "title": "Login Tests",
          "fullFile": "C:\\Users\\Krkljes\\Desktop\\Realworld App Praksa\\Realworld_app_praksa\\tests\\login.test.js",
          "file": "\\tests\\login.test.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"Login Tests\"",
              "fullTitle": "Login Tests \"before each\" hook in \"Login Tests\"",
              "timedOut": false,
              "duration": 1177,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Initialize the WebDriver and open the browser\ndriver = await new Builder().forBrowser('chrome').build();",
              "err": {},
              "uuid": "a10c15dc-91c8-4d07-a99b-def3ab0a042a",
              "parentUUID": "4e903043-d37f-423f-a017-04585b41d78e",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"Login Tests\"",
              "fullTitle": "Login Tests \"after each\" hook in \"Login Tests\"",
              "timedOut": false,
              "duration": 27,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Quit the WebDriver after the test is complete\nawait driver.quit();",
              "err": {},
              "uuid": "6a93b186-8e45-46c2-beb4-75357d98ada2",
              "parentUUID": "4e903043-d37f-423f-a017-04585b41d78e",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Successful Login Process Test",
              "fullTitle": "Login Tests Successful Login Process Test",
              "timedOut": false,
              "duration": 1151,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "[\n  \"Test Case Title: Successful Login Process Test\",\n  \"Test Case Description: Verify that a user can successfully log in into an account on the website\",\n  \"Step 1: Open the web browser\",\n  \"Step 2: Navigate to the login page (http://localhost:3000/signin)\",\n  \"Step 3.1. Enter a valid username (Tavares_Barrows) in the username input field\",\n  \"Step 3.2. Enter a valid password (s3cret) in the password input field\",\n  \"Step 4.1. Click on the \\\"SIGN IN\\\" button\",\n  \"Step 4.2. Wait for the URL to match (http://localhost:3000/)\"\n]",
              "code": "const loginPage = new LoginPage(driver);\n// Perform login\nawait loginPage.performLogin();\n// Add assertions to verify successful Login\nconst currentUrl = await driver.getCurrentUrl();\nexpect(currentUrl).to.equal(loginPage.baseUrl, \"Login was not successful\");\n// Additional context\naddContext(this, 'Test Case Title: Successful Login Process Test');\naddContext(this, 'Test Case Description: Verify that a user can successfully log in into an account on the website');\n// Test Steps:\naddContext(this, 'Step 1: Open the web browser');\naddContext(this, 'Step 2: Navigate to the login page (' + loginPage.loginUrl + ')');\n// Step 3: User Information Input\naddContext(this, 'Step 3.1. Enter a valid username (' + loginPage.username + ') in the username input field');\naddContext(this, 'Step 3.2. Enter a valid password (' + loginPage.password + ') in the password input field');\n// Step 4: Submit the Login Form\naddContext(this, 'Step 4.1. Click on the \"SIGN IN\" button');\naddContext(this, 'Step 4.2. Wait for the URL to match (' + loginPage.baseUrl + ')');",
              "err": {},
              "uuid": "165e0dba-55cc-495c-9dc7-b84b57b27c51",
              "parentUUID": "4e903043-d37f-423f-a017-04585b41d78e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Unsuccessful Login Process Test",
              "fullTitle": "Login Tests Unsuccessful Login Process Test",
              "timedOut": false,
              "duration": 1208,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "[\n  \"Test Case Title: Unsuccessful Login Process Test\",\n  \"Test Case Description: Verify that the login process fails when a user attempts to log in with invalid or incorrect information on the website.\",\n  \"Step 1: Open the web browser\",\n  \"Step 2: Navigate to the login page (http://localhost:3000/signin)\",\n  \"Step 3.1. Enter a valid username (Tavares_Barrows) in the username input field\",\n  \"Step 3.2. Enter a valid password (s3cret) in the password input field\",\n  \"Step 4.1. Click on the \\\"SIGN IN\\\" button\",\n  \"Step 4.2. Error message is displayed (Username or password is invalid)\"\n]",
              "code": "const loginPage = new LoginPage(driver);\n// Try to login with invalid credentials\nawait loginPage.tryInvalidLogin();\n// Add assertions to verify the Login failed\nconst errorMessage = driver.wait(until.elementLocated(loginPage.errorField),2000);\nconst errorText = await errorMessage.getText();\nexpect(errorText).to.equal(loginPage.errorMsg, \"Unsuccessful Login Process Test failed\");\n// Additional context\naddContext(this, 'Test Case Title: Unsuccessful Login Process Test');\naddContext(this, 'Test Case Description: Verify that the login process fails when a user attempts to log in with invalid or incorrect information on the website.');\n// Test Steps:\naddContext(this, 'Step 1: Open the web browser');\naddContext(this, 'Step 2: Navigate to the login page (' + loginPage.loginUrl + ')');\n// Step 3: User Information Input\naddContext(this, 'Step 3.1. Enter a valid username (' + loginPage.username + ') in the username input field');\naddContext(this, 'Step 3.2. Enter a valid password (' + loginPage.password + ') in the password input field');\n// Step 4: Attempt to Submit the Login Form\naddContext(this, 'Step 4.1. Click on the \"SIGN IN\" button');\naddContext(this, 'Step 4.2. Error message is displayed (' + errorText + ')');",
              "err": {},
              "uuid": "be479ddb-2218-4711-bb1e-a8f6beb6410a",
              "parentUUID": "4e903043-d37f-423f-a017-04585b41d78e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "165e0dba-55cc-495c-9dc7-b84b57b27c51",
            "be479ddb-2218-4711-bb1e-a8f6beb6410a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2359,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "98209835-3a23-4eaa-90eb-a35f4ee14620",
          "title": "Signup Process Tests",
          "fullFile": "C:\\Users\\Krkljes\\Desktop\\Realworld App Praksa\\Realworld_app_praksa\\tests\\signup.test.js",
          "file": "\\tests\\signup.test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Signup Process Tests\"",
              "fullTitle": "Signup Process Tests \"before all\" hook in \"Signup Process Tests\"",
              "timedOut": false,
              "duration": 1168,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Initialize the WebDriver and open the browser\ndriver = await new Builder().forBrowser('chrome').build();",
              "err": {},
              "uuid": "41233db0-600b-4e64-8c32-ac4172f55034",
              "parentUUID": "98209835-3a23-4eaa-90eb-a35f4ee14620",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Signup Process Tests\"",
              "fullTitle": "Signup Process Tests \"after all\" hook in \"Signup Process Tests\"",
              "timedOut": false,
              "duration": 33,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Quit the WebDriver after the test is complete\nawait driver.quit();",
              "err": {},
              "uuid": "66de467b-5c2a-4f14-bd8a-5a6279f50f10",
              "parentUUID": "98209835-3a23-4eaa-90eb-a35f4ee14620",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Successful Signup Process Test",
              "fullTitle": "Signup Process Tests Successful Signup Process Test",
              "timedOut": false,
              "duration": 1468,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "[\n  \"Test Case Title: Successful Signup Process Test\",\n  \"Test Case Description: Verify that a user can successfully sign up for an account on the website\",\n  \"Step 1: Open the web browser\",\n  \"Step 2: Navigate to the website's homepage (http://localhost:3000/)\",\n  \"Step 3: Click on the \\\"Don't have an account? Sign Up\\\" link\",\n  \"Step 4: Verify that the signup page is displayed\",\n  \"Step 5.1. Enter a valid first name (Name1) in the first name input field\",\n  \"Step 5.2. Enter a valid last name (Lastname1) in the last name input field\",\n  \"Step 5.3. Enter a valid username (user1) in the username input field\",\n  \"Step 5.4. Enter a valid password (password1) in the password input field\",\n  \"Step 5.5. Enter the same password (password1) in the password confirmation input field\",\n  \"Step 6. Click on the \\\"SIGN UP\\\" button\",\n  \"Step 7. Wait for the URL to match (http://localhost:3000/signin)\"\n]",
              "code": "const signUpPage = new SignUpPage(driver);\n// Perform signup\nawait signUpPage.performSignUp();\n// Add assertions to verify successful signup\nconst currentUrl = await driver.getCurrentUrl();\nexpect(currentUrl).to.equal(signUpPage.loginUrl, \"Sign up was not successful\");\n// Additional context\naddContext(this, 'Test Case Title: Successful Signup Process Test');\naddContext(this, 'Test Case Description: Verify that a user can successfully sign up for an account on the website');\n// Test Steps:\naddContext(this, 'Step 1: Open the web browser');\naddContext(this, 'Step 2: Navigate to the website\\'s homepage (' + signUpPage.baseUrl + ')');\naddContext(this, 'Step 3: Click on the \"Don\\'t have an account? Sign Up\" link');\naddContext(this, 'Step 4: Verify that the signup page is displayed');\n// Step 5: User Information Input\naddContext(this, 'Step 5.1. Enter a valid first name (' + signUpPage.validSignup.firstName + ') in the first name input field');\naddContext(this, 'Step 5.2. Enter a valid last name (' + signUpPage.validSignup.lastName + ') in the last name input field');\naddContext(this, 'Step 5.3. Enter a valid username (' + signUpPage.validSignup.username + ') in the username input field');\naddContext(this, 'Step 5.4. Enter a valid password (' + signUpPage.validSignup.password + ') in the password input field');\naddContext(this, 'Step 5.5. Enter the same password (' + signUpPage.validSignup.confirmPassword + ') in the password confirmation input field');\n// Step 6: Submit the Signup Form\naddContext(this, 'Step 6. Click on the \"SIGN UP\" button');\n// Step 7: Verify the Successful Signup\naddContext(this, 'Step 7. Wait for the URL to match (' + signUpPage.loginUrl + ')');",
              "err": {},
              "uuid": "ea02c64d-dada-4cdd-b3b5-6001058908e6",
              "parentUUID": "98209835-3a23-4eaa-90eb-a35f4ee14620",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Unsuccessful Signup Process Test",
              "fullTitle": "Signup Process Tests Unsuccessful Signup Process Test",
              "timedOut": false,
              "duration": 818,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "[\n  \"Test Case Title: Unsuccessful Signup Process Test\",\n  \"Test Case Description: Verify that the signup process fails when a user attempts to sign up with invalid or incorrect information on the website.\",\n  \"Step 1: Open the web browser\",\n  \"Step 2: Navigate to the website's homepage (http://localhost:3000/)\",\n  \"Step 3: Click on the \\\"Don't have an account? Sign Up\\\" link\",\n  \"Step 4: Verify that the signup page is displayed\",\n  \"Step 5.1. Enter a valid first name (1) in the first name input field\",\n  \"Step 5.2. Enter a valid last name (1) in the last name input field\",\n  \"Step 5.3. Enter a valid username (1) in the username input field\",\n  \"Step 5.4. Enter a valid password (1111) in the password input field\",\n  \"Step 5.5. Enter the same password (111) in the password confirmation input field\",\n  \"Step 6.1. Verify that the \\\"SIGN UP\\\" button is disabled\"\n]",
              "code": "const signUpPage = new SignUpPage(driver);\n// Try to signup with invalid credentials\nawait signUpPage.tryInvalidSignUp();\n// Add assertions to verify the signup failed\nconst signUpButton = await driver.findElement(signUpPage.singUpBtn);\nexpect(await signUpButton.getAttribute('disabled')).to.equal('true', 'Signup button is not disabled for invalid signup');\n// Additional context\naddContext(this, 'Test Case Title: Unsuccessful Signup Process Test');\naddContext(this, 'Test Case Description: Verify that the signup process fails when a user attempts to sign up with invalid or incorrect information on the website.');\n// Test Steps:\naddContext(this, 'Step 1: Open the web browser');\naddContext(this, 'Step 2: Navigate to the website\\'s homepage (' + signUpPage.baseUrl + ')');\naddContext(this, 'Step 3: Click on the \"Don\\'t have an account? Sign Up\" link');\naddContext(this, 'Step 4: Verify that the signup page is displayed');\n// Step 5: User Information Input\naddContext(this, 'Step 5.1. Enter a valid first name (' + signUpPage.invalidSignup.firstName + ') in the first name input field');\naddContext(this, 'Step 5.2. Enter a valid last name (' + signUpPage.invalidSignup.lastName + ') in the last name input field');\naddContext(this, 'Step 5.3. Enter a valid username (' + signUpPage.invalidSignup.username + ') in the username input field');\naddContext(this, 'Step 5.4. Enter a valid password (' + signUpPage.invalidSignup.password + ') in the password input field');\naddContext(this, 'Step 5.5. Enter the same password (' + signUpPage.invalidSignup.confirmPassword + ') in the password confirmation input field');\n// Step 6: Verify that the Signup button is disabled\naddContext(this, 'Step 6.1. Verify that the \"SIGN UP\" button is disabled');",
              "err": {},
              "uuid": "00ee61a6-bdc7-4555-a73c-dd6609736f1c",
              "parentUUID": "98209835-3a23-4eaa-90eb-a35f4ee14620",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ea02c64d-dada-4cdd-b3b5-6001058908e6",
            "00ee61a6-bdc7-4555-a73c-dd6609736f1c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2286,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 10000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}