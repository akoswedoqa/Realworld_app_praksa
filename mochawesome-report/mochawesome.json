{
  "stats": {
    "suites": 3,
    "tests": 6,
    "passes": 6,
    "pending": 0,
    "failures": 0,
    "start": "2023-10-11T20:58:27.674Z",
    "end": "2023-10-11T20:58:42.020Z",
    "duration": 14346,
    "testsRegistered": 6,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "a9d3da60-ddd3-4c6e-8f3a-768a80e0a5e9",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "9a67f9df-d7e5-4532-a09a-d538306aa198",
          "title": "Account tests",
          "fullFile": "C:\\Users\\Krkljes\\Desktop\\Realworld App Praksa\\Realworld_app_praksa\\tests\\account.test.js",
          "file": "\\tests\\account.test.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"Account tests\"",
              "fullTitle": "Account tests \"before each\" hook in \"Account tests\"",
              "timedOut": false,
              "duration": 1201,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Initialize the WebDriver and open the browser\ndriver = await new Builder().forBrowser('chrome').build();",
              "err": {},
              "uuid": "c7db0b9f-0fc1-430e-be52-82a622d6b8d2",
              "parentUUID": "9a67f9df-d7e5-4532-a09a-d538306aa198",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"Account tests\"",
              "fullTitle": "Account tests \"after each\" hook in \"Account tests\"",
              "timedOut": false,
              "duration": 34,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Quit the WebDriver after the test is complete\nawait driver.quit();",
              "err": {},
              "uuid": "45d9f9fd-fcab-4036-91b5-01a02062c638",
              "parentUUID": "9a67f9df-d7e5-4532-a09a-d538306aa198",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Create account test",
              "fullTitle": "Account tests Create account test",
              "timedOut": false,
              "duration": 1779,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const loginPage = new LoginPage(driver);\nconst accountPage = new AccountPage(driver);\n// Perform login\nawait loginPage.performLogin();\n// Create account\nawait accountPage.createBankAccount();\n// Add assertions to verify successful login\nconst currentUrl = await driver.getCurrentUrl();\nexpect(currentUrl).to.equal(accountPage.accountsUrl, \"Account creation failed\");",
              "err": {},
              "uuid": "f0eb6160-06f8-4e28-84ae-b1b988a12a73",
              "parentUUID": "9a67f9df-d7e5-4532-a09a-d538306aa198",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Delete account test",
              "fullTitle": "Account tests Delete account test",
              "timedOut": false,
              "duration": 1480,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const loginPage = new LoginPage(driver);\nconst accountPage = new AccountPage(driver);\n// Perform login\nawait loginPage.performLogin();\n// Delete account\nawait accountPage.findAndClickDeleteButtonByText();\n// Add assertions to verify successful login\nexpect(accountPage.verifyText).to.satisfy((text) => {\n  return text.includes(\"(Deleted)\") || text.includes(\"DELETE\");\n}, 'Associated text does not meet the expected conditions.');",
              "err": {},
              "uuid": "3f1f51f1-f11c-471f-98d0-21077f703cd7",
              "parentUUID": "9a67f9df-d7e5-4532-a09a-d538306aa198",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f0eb6160-06f8-4e28-84ae-b1b988a12a73",
            "3f1f51f1-f11c-471f-98d0-21077f703cd7"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3259,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "c62ba5f5-6e09-40a7-89d9-26b6a849517d",
          "title": "Login Tests",
          "fullFile": "C:\\Users\\Krkljes\\Desktop\\Realworld App Praksa\\Realworld_app_praksa\\tests\\login.test.js",
          "file": "\\tests\\login.test.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"Login Tests\"",
              "fullTitle": "Login Tests \"before each\" hook in \"Login Tests\"",
              "timedOut": false,
              "duration": 1195,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Initialize the WebDriver and open the browser\ndriver = await new Builder().forBrowser('chrome').build();",
              "err": {},
              "uuid": "4d396896-688f-4207-832b-b5b3f0ad0f52",
              "parentUUID": "c62ba5f5-6e09-40a7-89d9-26b6a849517d",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"Login Tests\"",
              "fullTitle": "Login Tests \"after each\" hook in \"Login Tests\"",
              "timedOut": false,
              "duration": 32,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Quit the WebDriver after the test is complete\nawait driver.quit();",
              "err": {},
              "uuid": "1f3287a4-6e36-4484-9656-69711b192df9",
              "parentUUID": "c62ba5f5-6e09-40a7-89d9-26b6a849517d",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Valid login test",
              "fullTitle": "Login Tests Valid login test",
              "timedOut": false,
              "duration": 1174,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "[\n  \"Found the url http://localhost:3000/signin\",\n  \"Filled the username Tavares_Barrows\",\n  \"Filled the password s3cret\",\n  \"Clicked on the button By(css selector, [data-test='signin-submit'])\",\n  \"The url matched http://localhost:3000/\"\n]",
              "code": "const loginPage = new LoginPage(driver);\n// Perform login\nawait loginPage.performLogin();\n// Add assertions to verify successful login\nconst currentUrl = await driver.getCurrentUrl();\n\nexpect(currentUrl).to.equal(loginPage.baseUrl, \"Log in was not successful\");\naddContext(this, `Found the url ${loginPage.loginUrl}`);\naddContext(this, `Filled the username ${loginPage.username}`);\naddContext(this, `Filled the password ${loginPage.password}`);\naddContext(this, `Clicked on the button ${loginPage.loginButton}`);\naddContext(this, `The url matched ${loginPage.baseUrl}`);",
              "err": {},
              "uuid": "5fba6eb2-6711-44e9-89e1-6c9227e8a09f",
              "parentUUID": "c62ba5f5-6e09-40a7-89d9-26b6a849517d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Invalid login test",
              "fullTitle": "Login Tests Invalid login test",
              "timedOut": false,
              "duration": 1258,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const loginPage = new LoginPage(driver);\n// Perform login\nawait loginPage.tryInvalidLogin();\n// Add assertions to verify successful login\nconst errorMessage = driver.wait(until.elementLocated(loginPage.errorField),2000);\nconst errorText = await errorMessage.getText();\nexpect(errorText).to.equal(loginPage.errorMsg, \"Invalid login test failed\");",
              "err": {},
              "uuid": "b93b50e2-aba9-4aa7-9219-c2f266e3dd4f",
              "parentUUID": "c62ba5f5-6e09-40a7-89d9-26b6a849517d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5fba6eb2-6711-44e9-89e1-6c9227e8a09f",
            "b93b50e2-aba9-4aa7-9219-c2f266e3dd4f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2432,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "604c13f2-9167-481d-9ff7-a76a653330b0",
          "title": "SignUp Tests",
          "fullFile": "C:\\Users\\Krkljes\\Desktop\\Realworld App Praksa\\Realworld_app_praksa\\tests\\signup.test.js",
          "file": "\\tests\\signup.test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"SignUp Tests\"",
              "fullTitle": "SignUp Tests \"before all\" hook in \"SignUp Tests\"",
              "timedOut": false,
              "duration": 1268,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Initialize the WebDriver and open the browser\ndriver = await new Builder().forBrowser('chrome').build();",
              "err": {},
              "uuid": "24562ad9-f760-43b0-8234-f58cbdf378f8",
              "parentUUID": "604c13f2-9167-481d-9ff7-a76a653330b0",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"SignUp Tests\"",
              "fullTitle": "SignUp Tests \"after all\" hook in \"SignUp Tests\"",
              "timedOut": false,
              "duration": 34,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Quit the WebDriver after the test is complete\nawait driver.quit();",
              "err": {},
              "uuid": "2643e658-f64b-42f7-b055-580662e4beba",
              "parentUUID": "604c13f2-9167-481d-9ff7-a76a653330b0",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Valid signup test",
              "fullTitle": "SignUp Tests Valid signup test",
              "timedOut": false,
              "duration": 1498,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const signUpPage = new SignUpPage(driver);\n// Perform signup\nawait signUpPage.performSignUp();\n// Add assertions to verify successful signup\nconst currentUrl = await driver.getCurrentUrl();\nexpect(currentUrl).to.equal(signUpPage.loginUrl, \"Sign up was not successful\");",
              "err": {},
              "uuid": "7d38618e-88b8-4ec3-87b6-bb0adc32691e",
              "parentUUID": "604c13f2-9167-481d-9ff7-a76a653330b0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Invalid signup test",
              "fullTitle": "SignUp Tests Invalid signup test",
              "timedOut": false,
              "duration": 756,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const signUpPage = new SignUpPage(driver);\n// Perform signup\nawait signUpPage.tryInvalidSignUp();\n// Add assertions to verify successful signup\nconst signUpButton = await driver.findElement(signUpPage.singUpBtn);\nexpect(await signUpButton.getAttribute('disabled')).to.equal('true', 'Signup button is not disabled for invalid signup');",
              "err": {},
              "uuid": "47a56a0e-1d1a-4368-b279-9d706b5e9b5d",
              "parentUUID": "604c13f2-9167-481d-9ff7-a76a653330b0",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7d38618e-88b8-4ec3-87b6-bb0adc32691e",
            "47a56a0e-1d1a-4368-b279-9d706b5e9b5d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2254,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 10000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}