{
  "stats": {
    "suites": 1,
    "tests": 1,
    "passes": 1,
    "pending": 0,
    "failures": 0,
    "start": "2023-10-16T19:02:21.082Z",
    "end": "2023-10-16T19:02:23.828Z",
    "duration": 2746,
    "testsRegistered": 1,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "11160087-ab0e-4fd4-ba3f-6c889e41220a",
      "title": "",
      "fullFile": "C:\\Users\\Krkljes\\Desktop\\Realworld App Praksa\\Realworld_app_praksa\\tests\\notification.test.js",
      "file": "\\tests\\notification.test.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "584514f0-b335-49fd-b934-74fa39ed9831",
          "title": "Notification test",
          "fullFile": "C:\\Users\\Krkljes\\Desktop\\Realworld App Praksa\\Realworld_app_praksa\\tests\\notification.test.js",
          "file": "\\tests\\notification.test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Notification test\"",
              "fullTitle": "Notification test \"before all\" hook in \"Notification test\"",
              "timedOut": false,
              "duration": 1228,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Initialize the WebDriver and open the browser\ndriver = await new Builder().forBrowser('chrome').build();",
              "err": {},
              "uuid": "559e4902-1a3b-4e3e-b605-1f0f3e8f73c7",
              "parentUUID": "584514f0-b335-49fd-b934-74fa39ed9831",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Notification test\"",
              "fullTitle": "Notification test \"after all\" hook in \"Notification test\"",
              "timedOut": false,
              "duration": 30,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Quit the WebDriver after the test is complete\nawait driver.quit();",
              "err": {},
              "uuid": "48b2b7b2-c32d-4162-96c2-96726a75aee7",
              "parentUUID": "584514f0-b335-49fd-b934-74fa39ed9831",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Dismissing a Notification Test",
              "fullTitle": "Notification test Dismissing a Notification Test",
              "timedOut": false,
              "duration": 1482,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const loginPage = new LoginPage(driver);\nconst notificationPage = new NotificationPage(driver);\n\n// Perform login\nawait loginPage.performLogin();\n// Get the initial value\nawait notificationPage.waitForElementToBeVisible(notificationPage.notificationCount);\nconst initialValue = parseInt(await notificationPage.getText(notificationPage.notificationCount), 10);\n// If the initial value is 0, consider the test passed\nif (initialValue === 0) {\n  console.log('Test passed because the initial count is 0.');\n} else {\n  // Dismiss a notification\n  await notificationPage.dismissNotification();\n  // Get the updated value\n  const updatedValue = parseInt(await notificationPage.getText(notificationPage.notificationCount), 10); \n  // Add assertions to verify successful dismissal\n  expect(updatedValue).to.equal(initialValue - 1);\n}",
              "err": {},
              "uuid": "c7cfc84f-f107-4732-b798-98660fdb045a",
              "parentUUID": "584514f0-b335-49fd-b934-74fa39ed9831",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c7cfc84f-f107-4732-b798-98660fdb045a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1482,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 10000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}